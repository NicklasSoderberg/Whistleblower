@model Whistleblower.ViewModels.LawyerViewmodel
@{ ViewBag.Title = "WhistleHandler";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

@Html.AntiForgeryToken()
<div class="form-horizontal">
    <div class="text-right">
        <button type="button" id="logout" class="btn btn-danger text-right">Logout</button>

    </div>
</div>

<div class="form-titel">
    <img src="~/images/omegapoint.png">
    <h2>Ärenden:</h2>
</div>
<hr />

<input type="text" class="pull-left" id="myInput" onkeyup="filterFunc()" placeholder="Search..">
<table class="table table-hover" id="myTable">
    <thead>
        <tr>
            <th onclick="sortTableText(0)" scope="col">Status</th>
            <th onclick="sortTableText(1)" scope="col">Ärende</th>
            <th onclick="sortTableText(2)" scope="col">Typ</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Whistles.Count() > 0)
        {
            foreach (Whistleblower.Models.WhistleModel w in Model.Whistles)
            {
                <tr class="table-active">
                    @using (Html.BeginForm("Whistle" + "/" + w.WhistleID.ToString(), "Lawyer", FormMethod.Post, w.WhistleID))
                    {
                        List<Whistleblower.Models.Mail> TempList = DBHandler.GetMessages(w.WhistleID);
                        switch (w.CurrentStatus)
                        {
                            case "Aktiv":
                                if (TempList.Count() > 0 && TempList[TempList.Count() - 1].MailSenderType == Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.Whistler)
                                {
                                    <td scope="row">@Html.Label(w.CurrentStatus, new { @class = "label label-success" }) <img src="~/images/285px-Chat_icon_new_message.svg.png" style="width:45px; height:40px; margin-left:50px;" /></td>
                                }
                                else
                                {
                                    <td scope="row">@Html.Label(w.CurrentStatus, new { @class = "label label-success" }) </td>
 }
                                break;
                            case "Hanteras":
                                if (TempList.Count() > 0 && TempList[TempList.Count() - 1].MailSenderType == Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.Whistler)
                                {
                                    <td scope="row">@Html.Label(w.CurrentStatus, new { @class = "label label-warning" }) <img src="~/images/285px-Chat_icon_new_message.svg.png" style="width:45px; height:40px; margin-left:50px;" /></td>
                                }
                                else
                                {
                                    <td scope="row">@Html.Label(w.CurrentStatus, new { @class = "label label-warning" })</td>
                                }
                                break;
                            case "Avslutad":
                                if (TempList.Count() > 0 && TempList[TempList.Count() - 1].MailSenderType == Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.Whistler)
                                {
                                    <td scope="row">@Html.Label(w.CurrentStatus, new { @class = "label label-danger" }) <img src="~/images/285px-Chat_icon_new_message.svg.png" style="width:45px; height:40px; margin-left:50px;" /></td>
                                }
                                else
                                {
                                    <td scope="row">@Html.Label(w.CurrentStatus, new { @class = "label label-danger" })</td>
                                }
                                break;
                        }


                        <td><label>@w.Description</label></td>

                        <td><label>@w.About</label></td>

                        <td><button class="btn btn-success btn-xs">Välj</button></td>
                    }
                </tr>
            }
        }
        else
        {
            <tr><td>Du har inga aktiva ärenden just nu.</td></tr>
        }
</table>

@section Scripts{
    @Scripts.Render("~/bundles/jquery")

    <script>
        $("#logout").click(function () {
        window.location.href = '@Url.Action("LogOutUser", "Lawyer")'
    });
    </script>
    <script>
        function sortTableText(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("myTable");
            switching = true;
            dir = "asc";
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir == "asc") {
                        if (x.innerText.toLowerCase() > y.innerText.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerText.toLowerCase() < y.innerText.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>
    <script>
        function filterFunc() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("myTable");
            tr = table.getElementsByTagName("tr");

            for (i = 0; i < tr.length; i++) {
                for (ii = 0; ii < 3; ii++) {
                    td = tr[i].getElementsByTagName("td")[ii];
                    if (td) {
                        txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                            break;
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }

            }
        }
    </script>
    <script>
        function sortTableHTML(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("myTable");
            switching = true;
            dir = "asc";
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>
}

