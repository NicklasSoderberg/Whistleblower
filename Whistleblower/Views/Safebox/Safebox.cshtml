@model Whistleblower.ViewModels.SafeboxViewmodel
@{ ViewBag.Title = "Safebox";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

@if (Session["LoggedInAsLawyer"].ToString() == "1")
{
    <div class="form-horizontal">
        <div class="text-right">
            <button type="button" id="logoutLawyer" class="btn btn-danger text-right">Logout</button>
        </div>
    </div>
    <nav class="navbar text-center">
        <img src="~/images/omegapoint.png" width="250" height="100" class="">
        @Html.ActionLink("ALLA ÄRENDE", "WhistleHandler", "Lawyer", null, htmlAttributes: new { @class = "btn", style = "color: black; font-size:15px;" })
        @Html.ActionLink("ÄRENDE: " + @Model.WhistleId, "Whistle/" + @Model.WhistleId, "Lawyer", null, htmlAttributes: new { @class = "btn", style = "color: black; font-size:15px;" })
        @Html.ActionLink("SAFEBOX", "Safebox/" + @Model.WhistleId, "Safebox", null, htmlAttributes: new { @class = "btn", style = "color: black; font-size:15px; text-decoration: underline;" })
    </nav>
    <hr />
}
else
{
    <div class="form-horizontal">
        <div class="text-right">
            <button type="button" id="logoutUser" class="btn btn-danger text-right">Logout</button>
        </div>
    </div>

    <nav class="navbar text-center">
        <img src="~/images/omegapoint.png" width="250" height="100" class="">
        @Html.ActionLink("MITT ÄRENDE", "ReportStatus", "Login", null, htmlAttributes: new { @class = "btn", style = "color: black; font-size:15px;" })
        @Html.ActionLink("SAFEBOX", "Safebox/" + @Model.WhistleId, "Safebox", null, htmlAttributes: new { @class = "btn", style = "color: black; font-size:15px; text-decoration: underline;" })
    </nav>
}
<div class="container" style="width:auto;">
    @{ string offset = "row col-lg-offset-5"; string col = "col-lg-4";}
    @if (Model.Files.Count() > 0)
    {
        offset = "row col-lg-offset-3";
    }
    @if(Model._MailList.Count() == 1)
    {
        col = "col-lg-6";
    }
    <div class="@offset">
        <div class="@col">
            @if (Model._MailList.Count() > 0)
            {
                <div class="panel panel-default col-lg-12 pre-scrollable" style="max-height: 700px; border-top:2px solid #e7e7e7;">
                    <div class="panel-body" id="scrollThis" style="margin:auto;">
                        @{string Sender = ""; string RowString = ""; string PanelString = ""; string PanelTitle = "";}
                        @foreach (Whistleblower.Models.Mail m in Model._MailList)
                        {
                            Sender = "";
                            RowString = "";

                            switch (m.MailSenderType)
                            {
                                case Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.Whistler:
                                    Sender = "float:right;";
                                    switch (Session["LoggedInAsLawyer"].ToString())
                                    {
                                        case "1":
                                            PanelString = "panel-danger";
                                            PanelTitle = "Mottagit";
                                            break;
                                        case "0":
                                            PanelString = "panel-success";
                                            PanelTitle = "Skickat";
                                            break;
                                    }
                                    break;
                                case Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.Lawyer:
                                    Sender = "float:left;";
                                    switch (Session["LoggedInAsLawyer"].ToString())
                                    {
                                        case "0":
                                            PanelString = "panel-danger";
                                            PanelTitle = "Mottagit";
                                            break;
                                        case "1":
                                            PanelString = "panel-success";
                                            PanelTitle = "Skickat";
                                            break;
                                    }
                                    break;
                                case Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.File:
                                    RowString = "justify-content: center; display: flex;";
                                    break;
                            }
                            <div class="row" style="@RowString">
                                <div class="col-sm-7" style="@Sender">
                                    @switch (m.MailSenderType)
                                    {
                                        case Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.Whistler:
                                            <div style="">
                                                <div style=" border: 2px solid #dedede; background-color: ghostwhite; border-radius: 5px; display:block;">
                                                    <p style="word-break: break-word; margin:5px 9px 5px 5px; text-align:center">@m.Message</p>
                                                    <p class="time-right" style="float:right;">@m.DateSent.ToString("H:mm")</p>
                                                </div>
                                            </div>
                                            break;
                                        case Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.Lawyer:
                                            <div style="display:block">

                                                <div style=" border: 2px solid #dedede; background-color: lightsteelblue; border-radius: 5px;">
                                                    <p style="word-break: break-all; margin:5px 9px 5px 5px; text-align:center">@m.Message</p>
                                                    <p class="time-right" style="float:right;">@m.DateSent.ToString("H:mm")</p>
                                                </div>
                                            </div>
                                            break;
                                        case Whistleblower.ViewModels.SafeboxViewmodel.MailSenders.File:
                                            <div style="display:block">
                                                <div style=" border: 2px solid #dedede; background-color: #f1f1f1; border-radius: 5px;">
                                                    <div class=" text-center">
                                                        <img src="@String.Format("data:" + DBHandler.GetFileExtFromFileID(Convert.ToInt32(m.Message)) + ";base64,{0}", DBHandler.GetFileFromFileID(Convert.ToInt32(m.Message)))" class="pop" style="height: 100px; width: 100px;" />
                                                    </div>
                                                    <div class="row text-center">
                                                        @Html.ActionLink("Download", "DownloadFile/" + Convert.ToInt32(m.Message), "Lawyer")
                                                    </div>
                                                    <p class="time-right" style="float:right;">@m.DateSent.ToString("H:mm")</p>
                                                </div>
                                            </div>
                                            break;
                                    }
                                </div>
                            </div>
                        }

                    </div>
                    @*<div class="panel-footer">

                        </div>*@
                </div>
            }
            @if (Model._MailList.Count == 0)
            {
                <div class="text-center">
                    <h2>
                        I detta ärende finns inget skapat meddelande.
                    </h2>
                </div>
            }
            <div id="buttonsend" style=" width:100%;">
                @if (Session["LoggedInAsLawyer"].ToString() == "1" || Whistleblower.ViewModels.SafeboxViewmodel.LastMessageType == 1)
                {

                    if (Session["LoggedInAsLawyer"].ToString() == "1")
                    {
                        <button type="button" class="btn btn-primary center-block" data-toggle="modal" data-target="#exampleModalCenter">
                            Skapa meddelande
                        </button> }
                    else if (Whistleblower.ViewModels.SafeboxViewmodel.LastMessageType == 1)
                    {
                        <button type="button" class="btn btn-primary center-block" data-toggle="modal" data-target="#exampleModalCenter">
                            Svara
                        </button>}
                }
            </div>
        </div>
        @if (Model.Files.Count() > 0)
        {
            <div class="col-lg-3">
                <div class="clearfix text-center">

                    @foreach (DB.File f in Model.Files)
                    {
                        <div class="col-xs-4 col-md-4">
                            <div class="row" style="margin-top: 25px">
                                <img src="@String.Format("data:" + f.Extension + ";base64,{0}", f.Base64)" class="pop" style="height: 100px; width: 100px;" />
                            </div>
                            <div class="row">
                                @Html.ActionLink("Download", "DownloadFile/" + f.FileID, "Lawyer")
                            </div>
                        </div>
                    }

                </div>
                <div class="text-center">
                    <h3>@Html.ActionLink("Download all as .zip", "DownloadZip/" + Model.WhistleId, "Lawyer")</h3>
                </div>
            </div>}
    </div>
</div>

<div class="modal fade" id="imagemodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="img">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <img src="" class="imagepreview img-responsive" style="width:auto; height:auto;">
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    @using (Html.BeginForm("SendMail" + "/" + Model.WhistleId, "Safebox", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="overflow:hidden">
                        <span aria-hidden="true" style="font-size: 40px;">&times;</span>
                    </button>
                    <h3 class="modal-title" id="exampleModalLongTitle">Nytt meddelande</h3>
                </div>
                <div class="modal-body">
                    <div class="form-group text-center">
                        <h4>@Html.LabelFor(m => m.Mail.Message)</h4>
                    </div>
                    @Html.TextAreaFor(m => m.Mail.Message, new { @class = "form-control", @required = "required", @style = "margin:0 auto; resize:none; height:300px; max-width: 500px" })
                    <div class="form-group">
                        <div class="row">
                            <label class="">Image files</label>
                            <input type="file" class="" name="FileUpload" id="FileUpload" accept="image/*" />
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Skicka</button>
                            <input type="button" class="btn btn-danger" value="Avbryt" data-dismiss="modal" />
                        </div>
                    </div>
                </div>
            </div>
        </div>}
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jquery")
    <script>
        $(function () {
            $('.pop').on('click', function () {
                console.log(this);
                $('.imagepreview').attr('src', $(this).attr('src'));
                jQuery.noConflict();
                $('#imagemodal').modal('show');
            });
        });
    </script>
    <script>
    function RespondButtonVisibilty(SenderType, message,id) {
                    if (SenderType == "Whistler" ) {
                        document.getElementById('RespondBtn').style.display = 'none';
                    } else if (SenderType == "Lawyer" ) {
                        document.getElementById('RespondBtn').style.display = 'block';
                    }

                    jQuery.ajax({
                    type: "POST",
            url: "@Url.Action("SelectMail")",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ id }),
            success: function (data) {
                            alert(data);
                        },
            failure: function (errMsg) {
                            alert(errMsg);
                        }
                    });
    }
    </script>

    <script>
        $("#GoBackLawyer").click(function () {
        window.location.href = '@Url.Action("Whistle/" + Model.WhistleId, "Lawyer")'
    });
    </script>
    <script>
        $("#GoBackWhistler").click(function () {
        window.location.href = '@Url.Action("ReportStatus", "Login")'
    });
    </script>
    <script>
        $('#scrollThis').scrollTop($('#scrollThis')[0].scrollHeight);
    </script>
    <script>
        var uploadField = document.getElementById("FileUpload");
        var fileName;
        var extFile
        var acceptFiles = ["jpg", "jpeg", "png"];
        uploadField.onchange = function () {
            for (var i = 0; i < this.files.length; i++) {
                console.log(i);
                if (this.files[i].size > 2200000) {
                    alert(this.files[i].name + " is over the 2mb limit!\n\nPlease try again..");
                    this.value = "";
                    break;
                };
                fileName = this.files[i].name;
                console.log(fileName);
                console.log(fileName.substr(fileName.length - 3));
                extFile = fileName.substr(fileName.length - 3);
                if (!acceptFiles.includes(extFile)) {
                    alert(extFile + " is not an supported filetype!\n\nPlease try again..");
                    this.value = "";
                    break;
                };
            };
        };
    </script>
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <!--<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>-->
    <!--Reference the autogenerated SignalR hub script. -->
    <!--<script src="~/signalr/hubs"></script>-->
    <!--SignalR script to update the chat page and send messages.-->
    <!--<script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>-->
}





